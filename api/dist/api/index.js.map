{"version":3,"sources":["../../src/api/index.js"],"names":["config","db","api","post","req","res","next","searchString","body","trim","length","json","objSearch","search","ip","connection","remoteAddress","save","then","savedSearch","catch","e","console","log","headers","_dataToSend","name","email","dataString","JSON","stringify","options","url","method","auth","callback","error","response","statusCode"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;kBAEe,gBAAoB;AAAA,KAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,KAATC,EAAS,QAATA,EAAS;;AAClC,KAAIC,MAAM,sBAAV;;AAEAA,KAAIC,IAAJ,CAAS,SAAT,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMC,eAAeH,IAAII,IAAJ,CAASD,YAAT,CAAsBE,IAAtB,EAArB;AACA,MAAGF,aAAaG,MAAb,GAAsB,EAAzB,EAA4B;AAC3BL,OAAIM,IAAJ,CAAS,6BAAT;AACA;AACA;AACD,MAAMC,YAAY;AACjBC,WAAQN,YADS;AAEjBO,OAAIV,IAAIW,UAAJ,CAAeC;AAFF,GAAlB;AAIA,MAAMH,SAAS,qBAAWD,SAAX,CAAf;AACEC,SAAOI,IAAP,GACGC,IADH,CACQ;AAAA,UAAeb,IAAIM,IAAJ,CAASQ,WAAT,CAAf;AAAA,GADR,EAEGC,KAFH,CAES;AAAA,UAAKd,KAAKe,CAAL,CAAL;AAAA,GAFT;AAGF,EAdD;;AAgBAnB,KAAIC,IAAJ,CAAS,aAAT,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3CgB,UAAQC,GAAR,CAAY,iBAAZ;AACA,MAAMC,UAAU;AACX,mBAAgB;AADL,GAAhB;AAGG,MAAIC,cAAc,EAAlB;AACAA,cAAY,MAAZ,IAAsBrB,IAAII,IAAJ,CAASkB,IAA/B;AACAD,cAAY,OAAZ,IAAuBrB,IAAII,IAAJ,CAASmB,KAAhC;AACAF,cAAY,MAAZ,IAAsB,OAAtB;AACA,MAAMG,aAAaC,KAAKC,SAAL,CAAe,EAAC,QAAQL,WAAT,EAAf,CAAnB;;AAEA,MAAMM,UAAU;AACdC,QAAK,mDADS;AAEdC,WAAQ,MAFM;AAGdT,YAASA,OAHK;AAIdhB,SAAMoB,UAJQ;AAKdM,SAAM;AACF,YAAQ,wBADN;AAEF,YAAQ;AAFN;AALQ,GAAhB;;AAWA,MAAMC,WAAW,SAAXA,QAAW,CAASC,KAAT,EAAgBC,QAAhB,EAA0B7B,IAA1B,EAAgC;AAChDc,WAAQC,GAAR,CAAYK,UAAZ;AACAN,WAAQC,GAAR,CAAYf,IAAZ;AACC,OAAI,CAAC4B,KAAD,IAAUC,SAASC,UAAT,IAAuB,GAArC,EAA0C;AAC7CjC,QAAIM,IAAJ,CAAS,oBAAT;AACA;AACO;AACAW,YAAQC,GAAR,CAAYf,IAAZ;AACH,IALD,MAMI;AACHc,YAAQC,GAAR,CAAYa,KAAZ;AACA;AACF,GAZD;;AAcA,yBAAQL,OAAR,EAAiBI,QAAjB;;AAEA9B,MAAIM,IAAJ,CAAS,MAAT;AACH;AACA,EAxCD;;AA0CC,QAAOT,GAAP;AACD,C","file":"index.js","sourcesContent":["import { version } from '../../package.json';\nimport { Router } from 'express';\nimport Search from '../models/search';\nimport Request from 'request';\n\nexport default ({ config, db }) => {\n\tlet api = Router();\n\n\tapi.post('/search', (req, res, next) => {\n\t\tconst searchString = req.body.searchString.trim();\n\t\tif(searchString.length < 10){\n\t\t\tres.json('minimum search size not met')\n\t\t\treturn;\n\t\t}\n\t\tconst objSearch = {\n\t\t\tsearch: searchString,\n\t\t\tip: req.connection.remoteAddress\n\t\t};\n\t\tconst search = new Search(objSearch);\n\t\t  search.save()\n\t\t    .then(savedSearch => res.json(savedSearch))\n\t\t    .catch(e => next(e));\n\t});\n\n\tapi.post('/addzendesk', (req, res, next) => {\n\t\tconsole.log(\"request started\")\n\t\tconst headers = {\n\t      'Content-Type': 'application/json'\n\t    };\n\t    let _dataToSend = {};\n\t    _dataToSend[\"name\"] = req.body.name;\n\t    _dataToSend[\"email\"] = req.body.email;\n\t    _dataToSend[\"role\"] = \"agent\";\n\t    const dataString = JSON.stringify({\"user\": _dataToSend});\n\n\t    const options = {\n\t      url: 'https://masoodtalha.zendesk.com/api/v2/users.json',\n\t      method: 'POST',\n\t      headers: headers,\n\t      body: dataString,\n\t      auth: {\n\t          'user': 'masoodtalha7@gmail.com',\n\t          'pass': 'pakistan100'\n\t      }\n\t    };\n\n\t    const callback = function(error, response, body) {\n\t    \tconsole.log(dataString);\n\t    \tconsole.log(body);\n\t      if (!error && response.statusCode == 200) {\n\t\t\t\tres.json('Added Successfully')\n\t\t\t\treturn;\n\t          //this.props.history.replace('/')\n\t          console.log(body);\n\t      }\n\t      else{\n\t      \tconsole.log(error)\n\t      }\n\t    }\n\n\t    Request(options, callback);\n\n\t    res.json('Done')\n\t\treturn;\n\t});\n\n\t\treturn api;\n}\n"]}